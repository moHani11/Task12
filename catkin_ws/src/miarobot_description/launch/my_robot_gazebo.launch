<?xml version="1.0"?>
<launch>

<arg name="world" default="worlds/empty.world"/>

<include file="$(find gazebo_ros)/launch/empty_world.launch">

    <arg name="world_name" value="$(arg world)"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="recording" value="false"/>
      <arg name="debug" value="false"/>

  </include>

  <!-- Convert an xacro and put on parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find miarobot_description)/urdf/model.urdf.xacro" />

  <!-- Spawn a robot into Gazebo -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model miarobot -z 0 -param robot_description -x 0.75 -y 0 -z 0.01" />

  <!-- Robots state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />

  <!-- Starting Joint state publisher node which will publish the joint values   -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Load PID controller Node -->
 <node name="pid_controller" pkg="miarobot_description" type="pid_controller.py" output="screen"/>

  <!-- Kinematic Controller Node -->
  <node name="kinematic_controller" pkg="miarobot_description" type="inverse_kmodel.py" output="screen"/>

  <!-- ROS controllers for wheels -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="left_front_wheel_velocity_controller right_front_wheel_velocity_controller left_back_wheel_velocity_controller right_back_wheel_velocity_controller"/>
</launch>
